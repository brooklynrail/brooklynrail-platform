{{/* Gets all events */}}
{{- $events := where $.Site.RegularPages  "Section" "events" -}}
{{- $length := (len $events) -}}
{
    "version" : "https://jsonfeed.org/version/1",
    "content" : "{{- .Type -}}",
    "type" : "list",
    "title" : "{{- if eq  .Title  .Site.Title -}}{{- .Site.Title -}}{{- else -}}{{- with .Title -}} {{.}} |  {{- end -}} {{- .Site.Title -}} {{- end -}}",
    "description": "{{- if ne  .Title  .Site.Title -}}{{- with .Title -}}{{.}}{{- end -}}{{- end -}}",
    "home_page_url" : "{{- .Site.BaseURL -}}",
    "count" : "{{- $length -}}",
    {{- with .OutputFormats.Get "JSON" -}}
    "feed_url" : "{{- .Permalink -}}",
    {{- end -}}
    {{- with $.Param "icon" -}}
    "icon" : "{{- . | absURL -}}",
    {{- end -}}
    {{- with $.Param "favicon" -}}
    "favicon" : "{{- . | absURL -}}",
    {{- end -}}
    {{ with .Section }}
    "section" : "{{ . }}",
    {{ end }}
    {{ with eq .Kind  "taxonomy"}}
    "taxonomy" : "{{ $.Data.Singular }}",
    "term" : "{{ $.Data.Term }}",
    {{ end }}


    {{/*  {{- dict "events" $events | jsonify -}}  */}}
    "items" : [
    {{- range $index, $page := $events -}}
    {
      "title" : {{- .Title | jsonify -}},
      "deck" : "{{- with .Params.deck -}}{{- . | markdownify -}}{{- end -}}",
      "summary" : "{{ with .Summary -}}{{- .| markdownify -}}{{- end -}}",
      "date" : "{{ with .Date -}}{{ . | dateFormat "2006-01-02T15:04:05Z07:00" -}}{{- end -}}",
      "date_modified" : "{{ with .Lastmod -}}{{ . | dateFormat "2006-01-02T15:04:05Z07:00" -}}{{- end -}}",
      "start_date" : "{{- with .Date -}}{{ . | dateFormat "2006-01-02T15:04:05Z07:00" -}}{{- end -}}",
      "end_date" : "{{- with .Params.end_date -}}{{- . | dateFormat "2006-01-02T15:04:05Z07:00" -}}{{- end -}}",
      {{ template "list_data" (dict "page" $page "key" "event_organizer" ) }}
      {{ template "list_data" (dict "page" $page "key" "event_producer" ) }}
      {{ template "list_data" (dict "page" $page "key" "collections" ) }}
      "registration_url" : "{{- with .Params.registration_url -}}{{- . -}}{{- end -}}",
      {{- if .Params.source -}}
      "source" : "{{- .Params.source -}}",
      {{- end -}}
      {{- if .Params.source_url -}}
      "source_url" : "{{- .Params.source_url -}}",
      {{- end -}}
      {{- if .Params.weight -}}
      "weight" : "{{- .Params.weight -}}",
      {{- end -}}
      {{- if .Params.aliases -}}
      "aliases" : {
        {{- $aliaslen := .Params.aliases | len -}}
        {{- $.Scratch.Set "aliascount" 1 -}}
        {{- range $i, $e := .Params.aliases -}}
          {{- with $e -}}
            {{- $aliascount := $.Scratch.Get "aliascount" -}}
            {{- if eq $aliascount $aliaslen -}}
              "{{- $i -}}" : "{{- $e -}}"
            {{- else -}}
              "{{- $i -}}" : "{{- $e -}}",
            {{- end -}}
            {{- $.Scratch.Add "aliascount" 1 -}}
          {{- end -}}
        {{- end -}}
      },
      {{- end -}}
      
      "url" : "{{- .Permalink -}}"
    }{{- if ne (add $index 1) $length -}},{{- end -}}
    {{- end -}}
    ]
}


{{/* Template: list_data ============================ */}}
{{- define "list_data" -}}
  
{{- $page := .page -}}
  {{- $key := .key -}}

  {{- dict $key ($page.Param $key) | jsonify -}},

{{- end -}}